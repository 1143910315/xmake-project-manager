// Copyright (C) 2022 Arthur LAURENT <arthur.laurent4@gmail.com>
// This file is subject to the license terms in the LICENSE file
// found in the top-level of this distribution

#pragma once

#include "ToolTreeItem.hpp"

#include <utils/treemodel.h>

namespace XMakeProjectManager::Internal {
    ////////////////////////////////////////////////////
    ////////////////////////////////////////////////////
    inline auto ToolTreeItem::name() const noexcept -> const QString & { return m_name; }

    ////////////////////////////////////////////////////
    ////////////////////////////////////////////////////
    inline auto ToolTreeItem::executable() const noexcept -> const Utils::FilePath & {
        return m_executable;
    }

    ////////////////////////////////////////////////////
    ////////////////////////////////////////////////////
    inline auto ToolTreeItem::isAutoDetected() const noexcept -> bool { return m_auto_detected; }

    ////////////////////////////////////////////////////
    ////////////////////////////////////////////////////
    inline auto ToolTreeItem::autorun() const noexcept -> bool { return m_autorun; }

    ////////////////////////////////////////////////////
    ////////////////////////////////////////////////////
    inline auto ToolTreeItem::autoAcceptRequests() const noexcept -> bool {
        return m_auto_accept_requests;
    }

    ////////////////////////////////////////////////////
    ////////////////////////////////////////////////////
    inline auto ToolTreeItem::id() const noexcept -> const Utils::Id & { return m_id; }

    ////////////////////////////////////////////////////
    ////////////////////////////////////////////////////
    inline auto ToolTreeItem::hasUnsavedChanges() const noexcept -> bool {
        return m_unsaved_changes;
    }

    ////////////////////////////////////////////////////
    ////////////////////////////////////////////////////
    inline auto ToolTreeItem::setSaved() noexcept -> void { m_unsaved_changes = false; }
} // namespace XMakeProjectManager::Internal
